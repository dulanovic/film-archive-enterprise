package forme;

import domen.Film;
import forme.model.FilmTableModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.TableColumn;
import komunikacija.Komunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;
import util.Util;

public class PnlPretragaFilmova extends javax.swing.JPanel {

    private PnlUnosZaduzenja panel;

    /**
     * Creates new form PnlPretragaFilmova
     *
     * @param panel
     */
    public PnlPretragaFilmova(PnlUnosZaduzenja panel) {
        initComponents();
        this.panel = panel;
        srediFormu();
    }

    public PnlUnosZaduzenja getPanel() {
        return panel;
    }

    public void setPanel(PnlUnosZaduzenja panel) {
        this.panel = panel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtPretragaFilmova = new javax.swing.JTextField();
        jbtnPretrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblPretragaFilmova = new javax.swing.JTable();
        jbtnDetalji = new javax.swing.JButton();
        jbtnIzaberi = new javax.swing.JButton();
        jbtnPonistiPretragu = new javax.swing.JButton();

        jLabel1.setText("Unesite kriterijum pretrage: (naziv filma/režiser)");

        jbtnPretrazi.setText("Pretraži");
        jbtnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPretraziActionPerformed(evt);
            }
        });

        jtblPretragaFilmova.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblPretragaFilmova);

        jbtnDetalji.setText("Detalji");
        jbtnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDetaljiActionPerformed(evt);
            }
        });

        jbtnIzaberi.setText("Izaberi");
        jbtnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzaberiActionPerformed(evt);
            }
        });

        jbtnPonistiPretragu.setText("Poništi pretragu");
        jbtnPonistiPretragu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPonistiPretraguActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jtxtPretragaFilmova, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnPretrazi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnPonistiPretragu))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnDetalji)
                            .addComponent(jbtnIzaberi))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtPretragaFilmova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnPretrazi)
                    .addComponent(jbtnPonistiPretragu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnDetalji)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnIzaberi)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPretraziActionPerformed
        try {
            if (!izvrsiValidaciju()) {
                return;
            }

            String kriterijumPretrage = jtxtPretragaFilmova.getText();

            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.PRETRAZI_FILMOVE);
            toz.setParametar(kriterijumPretrage);
            Komunikacija.getInstance().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();
            List<Film> lista = (List<Film>) too.getRezultat();
            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da nađe filmove po zadatoj vrednosti.", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
            } else {
                FilmTableModel model = new FilmTableModel(lista);
                jtblPretragaFilmova.setModel(model);
                JOptionPane.showMessageDialog(this, "Sistem je našao filmove po zadatoj vrednosti.", "Sistemska poruka", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {

        }


    }//GEN-LAST:event_jbtnPretraziActionPerformed

    private void jbtnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDetaljiActionPerformed
        try {
            int red = jtblPretragaFilmova.getSelectedRow();

            if (red == -1) {
                JOptionPane.showMessageDialog(this, "Niste odabrali film!", "Sistemska poruka", JOptionPane.WARNING_MESSAGE);
            }
            FilmTableModel model = (FilmTableModel) jtblPretragaFilmova.getModel();
            Film f = model.vratiFilm(red);
            Util.getInstance().putFilm("izabrani_film", f);

            PnlUnosFilmova p = new PnlUnosFilmova();
            JDialog d1 = (JDialog) SwingUtilities.getWindowAncestor(this);
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(d1);
            JDialog d = new JDialog(frame, "Prikaz filma", true);
            d.setLayout(new BorderLayout());
            d.add(p, BorderLayout.CENTER);
            d.pack();
            d.setLocationRelativeTo(this);
            d.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da nađe podatke o izabranom filmu.", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnDetaljiActionPerformed

    private void jbtnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzaberiActionPerformed
        int red = jtblPretragaFilmova.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Niste odabrali film!", "Sistemska poruka", JOptionPane.WARNING_MESSAGE);
        }
        FilmTableModel model = (FilmTableModel) jtblPretragaFilmova.getModel();
        Film f = model.vratiFilm(red);
        panel.jtxtFilm.setText(f.getNaziv());
        panel.setF(f);
    }//GEN-LAST:event_jbtnIzaberiActionPerformed

    private void jbtnPonistiPretraguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPonistiPretraguActionPerformed
        srediFormu();
    }//GEN-LAST:event_jbtnPonistiPretraguActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDetalji;
    private javax.swing.JButton jbtnIzaberi;
    private javax.swing.JButton jbtnPonistiPretragu;
    private javax.swing.JButton jbtnPretrazi;
    private javax.swing.JTable jtblPretragaFilmova;
    private javax.swing.JTextField jtxtPretragaFilmova;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {
            if (this.panel == null) {
                jbtnIzaberi.setVisible(false);
            }

            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.VRATI_FILMOVE);
            Komunikacija.getInstance().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();
            List<Film> lista = (List<Film>) too.getRezultat();

            FilmTableModel model = new FilmTableModel(lista);
            jtblPretragaFilmova.setModel(model);

            TableColumn tc0 = jtblPretragaFilmova.getColumnModel().getColumn(0);
            tc0.setPreferredWidth(140);
            TableColumn tc1 = jtblPretragaFilmova.getColumnModel().getColumn(1);
            tc1.setPreferredWidth(100);
            TableColumn tc2 = jtblPretragaFilmova.getColumnModel().getColumn(2);
            tc2.setPreferredWidth(20);
            TableColumn tc3 = jtblPretragaFilmova.getColumnModel().getColumn(3);
            tc3.setPreferredWidth(40);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita listu filmova", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean izvrsiValidaciju() {
        if (jtxtPretragaFilmova.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Niste uneli kriterijum pretrage!", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
            jtxtPretragaFilmova.requestFocusInWindow();
            jtxtPretragaFilmova.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            return false;
        }
        return true;
    }
}
