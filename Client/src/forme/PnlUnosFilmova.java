package forme;

import domen.Film;
import domen.Zanr;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;
import util.Util;

public class PnlUnosFilmova extends javax.swing.JPanel {

    /**
     * Creates new form PnlUnosFilmova
     */
    public PnlUnosFilmova() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtFilmID = new javax.swing.JTextField();
        jbtnKreirajFilm = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtTrajanje = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtxtNaziv = new javax.swing.JTextField();
        jtxtReziser = new javax.swing.JTextField();
        jcbZanr = new javax.swing.JComboBox();
        jbtnSacuvajFilm = new javax.swing.JButton();

        jLabel1.setText("ID filma:");

        jtxtFilmID.setEditable(false);

        jbtnKreirajFilm.setText("Kreiraj film");
        jbtnKreirajFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnKreirajFilmActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o filmu"));

        jLabel4.setText("Trajanje:");

        jLabel3.setText("Režiser:");

        jtxtTrajanje.setEditable(false);

        jLabel2.setText("Naziv:");

        jLabel5.setText("Žanr:");

        jtxtNaziv.setEditable(false);

        jtxtReziser.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtNaziv)
                            .addComponent(jtxtReziser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtTrajanje)
                            .addComponent(jcbZanr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtReziser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtTrajanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbZanr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jbtnSacuvajFilm.setText("Sačuvaj film");
        jbtnSacuvajFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajFilmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtFilmID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnKreirajFilm))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jbtnSacuvajFilm)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtFilmID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnKreirajFilm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnSacuvajFilm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnKreirajFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnKreirajFilmActionPerformed
        try {
            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.KREIRAJ_FILM);
            Komunikacija.getInstance().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();
            int id = (int) too.getRezultat();

            jtxtFilmID.setText(String.valueOf(id));
            jtxtNaziv.setEditable(true);
            jtxtReziser.setEditable(true);
            jtxtTrajanje.setEditable(true);
            jcbZanr.setEnabled(true);

            JOptionPane.showMessageDialog(this, "Sistem je kreirao novi film.", "Sistemska poruka", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da kreira novi film.", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnKreirajFilmActionPerformed

    private void jbtnSacuvajFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajFilmActionPerformed
        try {
            if (!izvrsiValidaciju()) {
                return;
            }

            int filmID = Integer.parseInt(jtxtFilmID.getText());
            String naziv = jtxtNaziv.getText();
            String reziser = jtxtReziser.getText();
            int trajanje = Integer.parseInt(jtxtTrajanje.getText());
            Zanr z = (Zanr) jcbZanr.getSelectedItem();

            Film f = new Film(filmID, naziv, reziser, trajanje, z);

            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.ZAPAMTI_FILM);
            toz.setParametar(f);
            Komunikacija.getInstance().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();

            JOptionPane.showMessageDialog(this, "Sistem je zapamtio novi film.", "Sistemska poruka", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti novi film.", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnSacuvajFilmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbtnKreirajFilm;
    private javax.swing.JButton jbtnSacuvajFilm;
    private javax.swing.JComboBox jcbZanr;
    private javax.swing.JTextField jtxtFilmID;
    private javax.swing.JTextField jtxtNaziv;
    private javax.swing.JTextField jtxtReziser;
    private javax.swing.JTextField jtxtTrajanje;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {

            jcbZanr.removeAllItems();
            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.VRATI_ZANROVE);
            Komunikacija.getInstance().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();
            List<Zanr> listaMesta = (List<Zanr>) too.getRezultat();
            for (Zanr z : listaMesta) {
                jcbZanr.addItem(z);
            }
            jcbZanr.setEnabled(false);

            Film f = Util.getInstance().getFilm("izabrani_film");

            if (f != null) {
                jbtnKreirajFilm.setEnabled(false);
                jbtnSacuvajFilm.setVisible(false);
                jtxtNaziv.setEditable(true);
                jtxtReziser.setEditable(true);
                jtxtTrajanje.setEditable(true);

                jtxtFilmID.setText(String.valueOf(f.getFilmID()));
                jtxtNaziv.setText(String.valueOf(f.getNaziv()));
                jtxtReziser.setText(String.valueOf(f.getReziser()));
                jtxtTrajanje.setText(String.valueOf(f.getTrajanje()));
                jcbZanr.setSelectedItem(f.getZanr());
                Util.getInstance().removeFilm("izabrani_film");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita listu žanrova", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean izvrsiValidaciju() {
        if (jtxtNaziv.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Niste uneli naziv filma!", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
            jtxtNaziv.requestFocusInWindow();
            jtxtNaziv.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            return false;
        }

        if (jtxtReziser.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Niste uneli režisera!", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
            jtxtReziser.requestFocusInWindow();
            jtxtReziser.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            return false;
        }

        if (jtxtTrajanje.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Niste uneli trajanje filma!", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
            jtxtTrajanje.requestFocusInWindow();
            jtxtTrajanje.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            return false;
        }

        try {
            int trajanje = Integer.parseInt(jtxtTrajanje.getText());
        } catch (NumberFormatException nfex) {
            JOptionPane.showMessageDialog(this, "Niste uneli trajanje filma u korektnom formatu! Potrebno je da unesete broj.", "Sistemska poruka", JOptionPane.ERROR_MESSAGE);
            jtxtTrajanje.requestFocusInWindow();
            jtxtTrajanje.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            return false;
        }

        return true;
    }

}
